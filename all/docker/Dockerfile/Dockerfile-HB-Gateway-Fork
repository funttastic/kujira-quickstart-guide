# syntax=docker/dockerfile-upstream:1-labs
FROM node:16.3.0

ARG DEBIAN_FRONTEND=noninteractive
ARG TZ="Etc/GMT"
ARG REPOSITORY_URL=${REPOSITORY_URL:-"https://github.com/Team-Kujira/gateway.git"}
ARG REPOSITORY_BRANCH=${REPOSITORY_BRANCH:-"community"}
ARG DEFINED_PASSPHRASE
ARG RANDOM_PASSPHRASE

LABEL application="gateway-v2"
LABEL branch=${BRANCH}
LABEL commit=${COMMIT}
LABEL date=${BUILD_DATE}

ENV COMMIT_BRANCH=${BRANCH}
ENV COMMIT_SHA=${COMMIT}
ENV BUILD_DATE=${DATE}
ENV GATEWAY_PORT=${GATEWAY_PORT}
ENV GATEWAY_PASSPHRASE=${RANDOM_PASSPHRASE:-$DEFINED_PASSPHRASE}

WORKDIR /root

# Dropping default /root/.bashrc because it will return if not running as interactive shell, thus not invoking PATH settings
RUN :> /root/.bashrc

SHELL [ "/bin/bash", "-lc" ]

RUN <<-EOF
	set -ex; \
	apt-get update; \
	apt-get install --no-install-recommends -y \
		ca-certificates \
		openssh-server \
		git \
		vim \
		tree \
		psmisc; \
	set +ex;
EOF

RUN <<-EOF
	set -ex
	git clone -b "$REPOSITORY_BRANCH" "$REPOSITORY_URL" /tmp/app
	cp -R /tmp/app/. .
	rm -rf /tmp/app
	set +ex
EOF

# COPY . .

EXPOSE 15888

RUN <<-EOF
	set -ex
	mkdir -p \
		/root/certs \
		/root/db \
		/root/conf \
		/root/logs \
		/var/lib
	set +ex
EOF

RUN <<-EOF
	set -ex
	cp -R /root/src/templates/* /root/conf
	set +ex
EOF

RUN <<-EOF
	set -ex
	yarn
	yarn prebuild
	yarn build
	set +ex
EOF

#RUN <<-EOF
#	set -ex
#	apt autoremove -y
#	apt clean autoclean
#	rm -rf \
#		/var/lib/apt/lists/* \
#		/etc/apt/sources.list \
#		/etc/apt/sources.list.d/* \
#		/tmp/* \
#		/var/tmp/*
#	set +ex
#EOF

CMD ["yarn", "start"]